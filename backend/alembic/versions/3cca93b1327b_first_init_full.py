"""first init full

Revision ID: 3cca93b1327b
Revises: 
Create Date: 2025-08-09 23:32:29.656181

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '3cca93b1327b'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('ai_server_selection_logs',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_ip', sa.String(length=64), nullable=False),
    sa.Column('selected_server_id', sa.Integer(), nullable=False),
    sa.Column('selected_country', sa.String(length=8), nullable=True),
    sa.Column('score', sa.Float(), nullable=True),
    sa.Column('reason', sa.String(length=512), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_ai_server_selection_logs_id'), 'ai_server_selection_logs', ['id'], unique=False)
    op.create_table('blocked_ip_ranges',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('cidr', sa.String(length=64), nullable=False),
    sa.Column('reason', sa.String(length=256), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('cidr')
    )
    op.create_index(op.f('ix_blocked_ip_ranges_id'), 'blocked_ip_ranges', ['id'], unique=False)
    op.create_table('blocked_ips',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('ip_address', sa.String(length=64), nullable=False),
    sa.Column('reason', sa.String(length=256), nullable=True),
    sa.Column('ban_until', sa.DateTime(), nullable=False),
    sa.Column('blocked_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('ip_address')
    )
    op.create_index(op.f('ix_blocked_ips_id'), 'blocked_ips', ['id'], unique=False)
    op.create_table('corporate_user_groups',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('max_proxies', sa.Integer(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_index(op.f('ix_corporate_user_groups_id'), 'corporate_user_groups', ['id'], unique=False)
    op.create_table('deleted_users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('email', sa.String(length=256), nullable=False),
    sa.Column('deleted_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_deleted_users_id'), 'deleted_users', ['id'], unique=False)
    op.create_table('failed_login_attempts',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('ip_address', sa.String(length=64), nullable=False),
    sa.Column('email', sa.String(length=256), nullable=True),
    sa.Column('attempt_time', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_failed_login_attempts_attempt_time'), 'failed_login_attempts', ['attempt_time'], unique=False)
    op.create_index(op.f('ix_failed_login_attempts_email'), 'failed_login_attempts', ['email'], unique=False)
    op.create_index(op.f('ix_failed_login_attempts_id'), 'failed_login_attempts', ['id'], unique=False)
    op.create_index(op.f('ix_failed_login_attempts_ip_address'), 'failed_login_attempts', ['ip_address'], unique=False)
    op.create_table('plans',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('description', sa.String(length=500), nullable=True),
    sa.Column('price', sa.Float(), nullable=False),
    sa.Column('duration_days', sa.Integer(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_plans_id'), 'plans', ['id'], unique=False)
    op.create_table('proxy_ips',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('ip_address', sa.String(length=64), nullable=False),
    sa.Column('port', sa.Integer(), nullable=False),
    sa.Column('country', sa.String(length=64), nullable=True),
    sa.Column('total_quota_mb', sa.BigInteger(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('ip_address')
    )
    op.create_index(op.f('ix_proxy_ips_id'), 'proxy_ips', ['id'], unique=False)
    op.create_table('refresh_token_blacklist',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('token', sa.String(length=512), nullable=False),
    sa.Column('blacklisted_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('token')
    )
    op.create_index(op.f('ix_refresh_token_blacklist_id'), 'refresh_token_blacklist', ['id'], unique=False)
    op.create_table('vpn_servers',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=128), nullable=False),
    sa.Column('ip_address', sa.String(length=64), nullable=False),
    sa.Column('country_code', sa.String(length=8), nullable=True),
    sa.Column('city', sa.String(length=64), nullable=True),
    sa.Column('load_ratio', sa.Float(), nullable=True),
    sa.Column('last_ping', sa.Integer(), nullable=True),
    sa.Column('is_blacklisted', sa.Boolean(), nullable=True),
    sa.Column('type', sa.String(length=32), nullable=False),
    sa.Column('status', sa.String(length=16), nullable=True),
    sa.Column('capacity', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('ip_address')
    )
    op.create_index(op.f('ix_vpn_servers_id'), 'vpn_servers', ['id'], unique=False)
    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('email', sa.String(length=128), nullable=False),
    sa.Column('password_hash', sa.String(length=256), nullable=True),
    sa.Column('full_name', sa.String(length=128), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('is_email_verified', sa.Boolean(), nullable=True),
    sa.Column('is_admin', sa.Boolean(), nullable=True),
    sa.Column('role', sa.String(length=16), nullable=True),
    sa.Column('status', sa.String(length=16), nullable=True),
    sa.Column('corporate_account_id', sa.Integer(), nullable=True),
    sa.Column('is_corporate_admin', sa.Boolean(), nullable=True),
    sa.Column('corporate_group_id', sa.Integer(), nullable=True),
    sa.Column('mfa_enabled', sa.Boolean(), nullable=True),
    sa.Column('totp_secret', sa.String(length=32), nullable=True),
    sa.Column('last_login', sa.DateTime(), nullable=True),
    sa.Column('last_ip', sa.String(length=64), nullable=True),
    sa.Column('failed_login_attempts', sa.Integer(), nullable=True),
    sa.Column('locked_until', sa.DateTime(), nullable=True),
    sa.Column('referral_code', sa.String(length=16), nullable=True),
    sa.Column('referred_by', sa.String(length=16), nullable=True),
    sa.Column('notification_settings', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('flags', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('preferences', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('preferred_language', sa.String(length=8), nullable=True),
    sa.Column('phone_number', sa.String(length=32), nullable=True),
    sa.Column('country_code', sa.String(length=8), nullable=True),
    sa.Column('city', sa.String(length=64), nullable=True),
    sa.Column('region', sa.String(length=64), nullable=True),
    sa.Column('reset_token', sa.String(length=256), nullable=True),
    sa.Column('reset_token_expire', sa.DateTime(), nullable=True),
    sa.Column('is_deleted', sa.Boolean(), nullable=True),
    sa.Column('anonymized_at', sa.DateTime(), nullable=True),
    sa.Column('proxy_quota_gb', sa.Integer(), nullable=True),
    sa.Column('active_proxy_count', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['corporate_group_id'], ['corporate_user_groups.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email'),
    sa.UniqueConstraint('referral_code')
    )
    op.create_index(op.f('ix_users_id'), 'users', ['id'], unique=False)
    op.create_table('admin_activity_logs',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('admin_user_id', sa.Integer(), nullable=False),
    sa.Column('action', sa.String(length=128), nullable=False),
    sa.Column('details', sa.String(length=512), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['admin_user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_admin_activity_logs_id'), 'admin_activity_logs', ['id'], unique=False)
    op.create_table('anomaly_fraud_records',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('event_type', sa.String(length=64), nullable=False),
    sa.Column('details', sa.String(length=512), nullable=True),
    sa.Column('detected_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_anomaly_fraud_records_id'), 'anomaly_fraud_records', ['id'], unique=False)
    op.create_table('api_keys',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('key', sa.String(length=128), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('revoked', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('key')
    )
    op.create_index(op.f('ix_api_keys_id'), 'api_keys', ['id'], unique=False)
    op.create_table('billing_history',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('transaction_id', sa.String(length=128), nullable=False),
    sa.Column('amount', sa.Float(), nullable=False),
    sa.Column('transaction_date', sa.DateTime(), nullable=True),
    sa.Column('status', sa.String(length=64), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_billing_history_id'), 'billing_history', ['id'], unique=False)
    op.create_table('connection_attempts',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('server_id', sa.Integer(), nullable=True),
    sa.Column('attempt_time', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('status', sa.String(length=16), nullable=False),
    sa.Column('reason', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['server_id'], ['vpn_servers.id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_connection_attempts_id'), 'connection_attempts', ['id'], unique=False)
    op.create_table('consent_logs',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('consent_type', sa.String(length=128), nullable=False),
    sa.Column('consent_given_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_consent_logs_id'), 'consent_logs', ['id'], unique=False)
    op.create_table('corporate_user_rights_history',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('changed_by_admin_id', sa.Integer(), nullable=True),
    sa.Column('field_changed', sa.String(length=64), nullable=False),
    sa.Column('old_value', sa.String(length=128), nullable=True),
    sa.Column('new_value', sa.String(length=128), nullable=True),
    sa.Column('changed_at', sa.DateTime(), nullable=True),
    sa.Column('note', sa.String(length=256), nullable=True),
    sa.ForeignKeyConstraint(['changed_by_admin_id'], ['users.id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_corporate_user_rights_history_id'), 'corporate_user_rights_history', ['id'], unique=False)
    op.create_table('email_sms_logs',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('type', sa.String(length=16), nullable=False),
    sa.Column('recipient', sa.String(length=256), nullable=False),
    sa.Column('subject', sa.String(length=256), nullable=True),
    sa.Column('message', sa.String(), nullable=False),
    sa.Column('sent_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_email_sms_logs_id'), 'email_sms_logs', ['id'], unique=False)
    op.create_table('membership',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('plan_id', sa.Integer(), nullable=False),
    sa.Column('status', sa.String(length=32), nullable=True),
    sa.Column('started_at', sa.DateTime(), nullable=True),
    sa.Column('ended_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['plan_id'], ['plans.id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_membership_id'), 'membership', ['id'], unique=False)
    op.create_table('payment',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('plan_id', sa.Integer(), nullable=False),
    sa.Column('amount', sa.Integer(), nullable=False),
    sa.Column('status', sa.String(length=32), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['plan_id'], ['plans.id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_payment_id'), 'payment', ['id'], unique=False)
    op.create_table('proxy_requests',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('status', sa.String(length=50), nullable=True),
    sa.Column('request_reason', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_proxy_requests_id'), 'proxy_requests', ['id'], unique=False)
    op.create_table('proxy_usage_logs',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('proxy_id', sa.Integer(), nullable=False),
    sa.Column('used_mb', sa.BigInteger(), nullable=True),
    sa.Column('timestamp', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('note', sa.String(length=256), nullable=True),
    sa.ForeignKeyConstraint(['proxy_id'], ['proxy_ips.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_proxy_usage_logs_id'), 'proxy_usage_logs', ['id'], unique=False)
    op.create_table('subscription_history',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('plan_name', sa.String(length=128), nullable=False),
    sa.Column('started_at', sa.DateTime(), nullable=True),
    sa.Column('ended_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_subscription_history_id'), 'subscription_history', ['id'], unique=False)
    op.create_table('system_alerts',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('alert_type', sa.String(length=64), nullable=False),
    sa.Column('message', sa.String(length=500), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_system_alerts_id'), 'system_alerts', ['id'], unique=False)
    op.create_table('two_factor_tokens',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('token', sa.String(length=64), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('expires_at', sa.DateTime(timezone=True), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_two_factor_tokens_id'), 'two_factor_tokens', ['id'], unique=False)
    op.create_table('user_activity_logs',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('activity_type', sa.String(length=64), nullable=False),
    sa.Column('detail', sa.String(length=256), nullable=True),
    sa.Column('timestamp', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_user_activity_logs_id'), 'user_activity_logs', ['id'], unique=False)
    op.create_table('user_billing_history',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('action', sa.String(length=64), nullable=False),
    sa.Column('amount', sa.Float(), nullable=False),
    sa.Column('currency', sa.String(length=8), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('notes', sa.String(length=256), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_user_billing_history_id'), 'user_billing_history', ['id'], unique=False)
    op.create_table('user_blocklist',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('reason', sa.String(length=256), nullable=True),
    sa.Column('blocked_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('expires_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_user_blocklist_id'), 'user_blocklist', ['id'], unique=False)
    op.create_table('user_external_auths',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('provider', sa.String(length=64), nullable=False),
    sa.Column('provider_user_id', sa.String(length=128), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_user_external_auths_id'), 'user_external_auths', ['id'], unique=False)
    op.create_table('user_flags_settings',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('notification_settings', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('flags', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('preferences', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('proxy_quota_gb', sa.Integer(), nullable=True),
    sa.Column('active_proxy_count', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_user_flags_settings_id'), 'user_flags_settings', ['id'], unique=False)
    op.create_table('user_limits',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('limit_type', sa.String(length=64), nullable=False),
    sa.Column('value', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_user_limits_id'), 'user_limits', ['id'], unique=False)
    op.create_table('user_manual_audit',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('action', sa.String(), nullable=False),
    sa.Column('performed_by', sa.String(), nullable=False),
    sa.Column('timestamp', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_user_manual_audit_id'), 'user_manual_audit', ['id'], unique=False)
    op.create_table('user_notifications',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(length=128), nullable=True),
    sa.Column('message', sa.Text(), nullable=False),
    sa.Column('type', sa.String(length=64), nullable=True),
    sa.Column('status', sa.String(length=32), nullable=True),
    sa.Column('is_read', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_user_notifications_id'), 'user_notifications', ['id'], unique=False)
    op.create_table('user_profiles',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('phone_number', sa.String(length=32), nullable=True),
    sa.Column('preferred_language', sa.String(length=8), nullable=True),
    sa.Column('referral_code', sa.String(length=16), nullable=True),
    sa.Column('referred_by', sa.String(length=16), nullable=True),
    sa.Column('is_terms_accepted', sa.Boolean(), nullable=True),
    sa.Column('is_deleted', sa.Boolean(), nullable=True),
    sa.Column('anonymized_at', sa.DateTime(), nullable=True),
    sa.Column('country_code', sa.String(length=8), nullable=True),
    sa.Column('city', sa.String(length=64), nullable=True),
    sa.Column('region', sa.String(length=64), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('referral_code')
    )
    op.create_index(op.f('ix_user_profiles_id'), 'user_profiles', ['id'], unique=False)
    op.create_table('user_proxy_assignments',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('proxy_id', sa.Integer(), nullable=False),
    sa.Column('assigned_quota_mb', sa.BigInteger(), nullable=True),
    sa.Column('assigned_until', sa.DateTime(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['proxy_id'], ['proxy_ips.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_user_proxy_assignments_id'), 'user_proxy_assignments', ['id'], unique=False)
    op.create_table('user_referral_rewards',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('referred_user_id', sa.Integer(), nullable=False),
    sa.Column('reward_amount', sa.Float(), nullable=True),
    sa.Column('reward_currency', sa.String(length=10), nullable=True),
    sa.Column('status', sa.String(length=32), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['referred_user_id'], ['users.id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_user_referral_rewards_id'), 'user_referral_rewards', ['id'], unique=False)
    op.create_table('user_relationships',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('related_user_id', sa.Integer(), nullable=True),
    sa.Column('relationship_type', sa.String(length=32), nullable=True),
    sa.ForeignKeyConstraint(['related_user_id'], ['users.id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_user_relationships_id'), 'user_relationships', ['id'], unique=False)
    op.create_table('user_security',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('mfa_enabled', sa.Boolean(), nullable=True),
    sa.Column('totp_secret', sa.String(length=64), nullable=True),
    sa.Column('last_login', sa.DateTime(), nullable=True),
    sa.Column('last_ip', sa.String(length=64), nullable=True),
    sa.Column('failed_login_attempts', sa.Integer(), nullable=True),
    sa.Column('locked_until', sa.DateTime(), nullable=True),
    sa.Column('reset_token', sa.String(length=256), nullable=True),
    sa.Column('reset_token_expire', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_user_security_id'), 'user_security', ['id'], unique=False)
    op.create_table('user_server_activities',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('server_ip', sa.String(length=64), nullable=False),
    sa.Column('activity_type', sa.String(length=64), nullable=False),
    sa.Column('timestamp', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('details', sa.String(length=256), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_user_server_activities_id'), 'user_server_activities', ['id'], unique=False)
    op.create_table('user_sessions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('session_token', sa.String(length=128), nullable=False),
    sa.Column('status', sa.String(length=32), nullable=True),
    sa.Column('started_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('ended_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('ip_address', sa.String(length=45), nullable=True),
    sa.Column('device_info', sa.String(length=256), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('session_token')
    )
    op.create_index(op.f('ix_user_sessions_id'), 'user_sessions', ['id'], unique=False)
    op.create_table('user_subscription_history',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('plan_id', sa.Integer(), nullable=True),
    sa.Column('action', sa.String(length=32), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('notes', sa.String(length=256), nullable=True),
    sa.ForeignKeyConstraint(['plan_id'], ['plans.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_user_subscription_history_id'), 'user_subscription_history', ['id'], unique=False)
    op.create_table('user_support_tickets',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('subject', sa.String(length=128), nullable=False),
    sa.Column('message', sa.Text(), nullable=False),
    sa.Column('status', sa.String(length=32), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_user_support_tickets_id'), 'user_support_tickets', ['id'], unique=False)
    op.create_table('vpn_configs',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('server_id', sa.Integer(), nullable=False),
    sa.Column('config', sa.Text(), nullable=False),
    sa.ForeignKeyConstraint(['server_id'], ['vpn_servers.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_vpn_configs_id'), 'vpn_configs', ['id'], unique=False)
    op.create_table('vpn_connection_history',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('server_id', sa.Integer(), nullable=False),
    sa.Column('ip', sa.String(length=64), nullable=False),
    sa.Column('country_code', sa.String(length=8), nullable=True),
    sa.Column('duration', sa.Integer(), nullable=True),
    sa.Column('success', sa.Boolean(), nullable=True),
    sa.Column('connected_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('disconnected_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['server_id'], ['vpn_servers.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_vpn_connection_history_id'), 'vpn_connection_history', ['id'], unique=False)
    op.create_table('vpn_logs',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('server_id', sa.Integer(), nullable=True),
    sa.Column('connected_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('disconnected_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('traffic_sent_mb', sa.Integer(), nullable=True),
    sa.Column('traffic_received_mb', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['server_id'], ['vpn_servers.id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_vpn_logs_id'), 'vpn_logs', ['id'], unique=False)
    op.create_table('api_key_access_logs',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('api_key_id', sa.Integer(), nullable=True),
    sa.Column('access_time', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('ip_address', sa.String(length=64), nullable=True),
    sa.Column('endpoint', sa.String(length=128), nullable=True),
    sa.ForeignKeyConstraint(['api_key_id'], ['api_keys.id'], ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_api_key_access_logs_id'), 'api_key_access_logs', ['id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_api_key_access_logs_id'), table_name='api_key_access_logs')
    op.drop_table('api_key_access_logs')
    op.drop_index(op.f('ix_vpn_logs_id'), table_name='vpn_logs')
    op.drop_table('vpn_logs')
    op.drop_index(op.f('ix_vpn_connection_history_id'), table_name='vpn_connection_history')
    op.drop_table('vpn_connection_history')
    op.drop_index(op.f('ix_vpn_configs_id'), table_name='vpn_configs')
    op.drop_table('vpn_configs')
    op.drop_index(op.f('ix_user_support_tickets_id'), table_name='user_support_tickets')
    op.drop_table('user_support_tickets')
    op.drop_index(op.f('ix_user_subscription_history_id'), table_name='user_subscription_history')
    op.drop_table('user_subscription_history')
    op.drop_index(op.f('ix_user_sessions_id'), table_name='user_sessions')
    op.drop_table('user_sessions')
    op.drop_index(op.f('ix_user_server_activities_id'), table_name='user_server_activities')
    op.drop_table('user_server_activities')
    op.drop_index(op.f('ix_user_security_id'), table_name='user_security')
    op.drop_table('user_security')
    op.drop_index(op.f('ix_user_relationships_id'), table_name='user_relationships')
    op.drop_table('user_relationships')
    op.drop_index(op.f('ix_user_referral_rewards_id'), table_name='user_referral_rewards')
    op.drop_table('user_referral_rewards')
    op.drop_index(op.f('ix_user_proxy_assignments_id'), table_name='user_proxy_assignments')
    op.drop_table('user_proxy_assignments')
    op.drop_index(op.f('ix_user_profiles_id'), table_name='user_profiles')
    op.drop_table('user_profiles')
    op.drop_index(op.f('ix_user_notifications_id'), table_name='user_notifications')
    op.drop_table('user_notifications')
    op.drop_index(op.f('ix_user_manual_audit_id'), table_name='user_manual_audit')
    op.drop_table('user_manual_audit')
    op.drop_index(op.f('ix_user_limits_id'), table_name='user_limits')
    op.drop_table('user_limits')
    op.drop_index(op.f('ix_user_flags_settings_id'), table_name='user_flags_settings')
    op.drop_table('user_flags_settings')
    op.drop_index(op.f('ix_user_external_auths_id'), table_name='user_external_auths')
    op.drop_table('user_external_auths')
    op.drop_index(op.f('ix_user_blocklist_id'), table_name='user_blocklist')
    op.drop_table('user_blocklist')
    op.drop_index(op.f('ix_user_billing_history_id'), table_name='user_billing_history')
    op.drop_table('user_billing_history')
    op.drop_index(op.f('ix_user_activity_logs_id'), table_name='user_activity_logs')
    op.drop_table('user_activity_logs')
    op.drop_index(op.f('ix_two_factor_tokens_id'), table_name='two_factor_tokens')
    op.drop_table('two_factor_tokens')
    op.drop_index(op.f('ix_system_alerts_id'), table_name='system_alerts')
    op.drop_table('system_alerts')
    op.drop_index(op.f('ix_subscription_history_id'), table_name='subscription_history')
    op.drop_table('subscription_history')
    op.drop_index(op.f('ix_proxy_usage_logs_id'), table_name='proxy_usage_logs')
    op.drop_table('proxy_usage_logs')
    op.drop_index(op.f('ix_proxy_requests_id'), table_name='proxy_requests')
    op.drop_table('proxy_requests')
    op.drop_index(op.f('ix_payment_id'), table_name='payment')
    op.drop_table('payment')
    op.drop_index(op.f('ix_membership_id'), table_name='membership')
    op.drop_table('membership')
    op.drop_index(op.f('ix_email_sms_logs_id'), table_name='email_sms_logs')
    op.drop_table('email_sms_logs')
    op.drop_index(op.f('ix_corporate_user_rights_history_id'), table_name='corporate_user_rights_history')
    op.drop_table('corporate_user_rights_history')
    op.drop_index(op.f('ix_consent_logs_id'), table_name='consent_logs')
    op.drop_table('consent_logs')
    op.drop_index(op.f('ix_connection_attempts_id'), table_name='connection_attempts')
    op.drop_table('connection_attempts')
    op.drop_index(op.f('ix_billing_history_id'), table_name='billing_history')
    op.drop_table('billing_history')
    op.drop_index(op.f('ix_api_keys_id'), table_name='api_keys')
    op.drop_table('api_keys')
    op.drop_index(op.f('ix_anomaly_fraud_records_id'), table_name='anomaly_fraud_records')
    op.drop_table('anomaly_fraud_records')
    op.drop_index(op.f('ix_admin_activity_logs_id'), table_name='admin_activity_logs')
    op.drop_table('admin_activity_logs')
    op.drop_index(op.f('ix_users_id'), table_name='users')
    op.drop_table('users')
    op.drop_index(op.f('ix_vpn_servers_id'), table_name='vpn_servers')
    op.drop_table('vpn_servers')
    op.drop_index(op.f('ix_refresh_token_blacklist_id'), table_name='refresh_token_blacklist')
    op.drop_table('refresh_token_blacklist')
    op.drop_index(op.f('ix_proxy_ips_id'), table_name='proxy_ips')
    op.drop_table('proxy_ips')
    op.drop_index(op.f('ix_plans_id'), table_name='plans')
    op.drop_table('plans')
    op.drop_index(op.f('ix_failed_login_attempts_ip_address'), table_name='failed_login_attempts')
    op.drop_index(op.f('ix_failed_login_attempts_id'), table_name='failed_login_attempts')
    op.drop_index(op.f('ix_failed_login_attempts_email'), table_name='failed_login_attempts')
    op.drop_index(op.f('ix_failed_login_attempts_attempt_time'), table_name='failed_login_attempts')
    op.drop_table('failed_login_attempts')
    op.drop_index(op.f('ix_deleted_users_id'), table_name='deleted_users')
    op.drop_table('deleted_users')
    op.drop_index(op.f('ix_corporate_user_groups_id'), table_name='corporate_user_groups')
    op.drop_table('corporate_user_groups')
    op.drop_index(op.f('ix_blocked_ips_id'), table_name='blocked_ips')
    op.drop_table('blocked_ips')
    op.drop_index(op.f('ix_blocked_ip_ranges_id'), table_name='blocked_ip_ranges')
    op.drop_table('blocked_ip_ranges')
    op.drop_index(op.f('ix_ai_server_selection_logs_id'), table_name='ai_server_selection_logs')
    op.drop_table('ai_server_selection_logs')
    # ### end Alembic commands ###
