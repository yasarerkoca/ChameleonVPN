name: CI
on: [push, pull_request]

jobs:
  backend:
    runs-on: ubuntu-latest
    defaults: { run: { working-directory: ./backend } }
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with: { python-version: '3.11' }
      - uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('backend/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-
      - name: Install
        run: |
          python -m pip install -U pip
          pip install -r requirements.txt
          pip install pytest pytest-cov ruff mypy pip-audit
      - name: Lint
        run: ruff .
      - name: Type check
        run: mypy .
      - name: Test
        run: pytest --cov --junitxml=test-results.xml
      - name: Security audit
        run: pip-audit -r requirements.txt
      - name: Export OpenAPI schema
        run: |
          sudo sh -c 'echo "127.0.0.1 backend" >> /etc/hosts'
          uvicorn app.main:app --host backend --port 8000 &
          pid=$!
          sleep 3
          curl http://backend:8000/openapi.json -o openapi.json
          kill $pid
      - uses: actions/upload-artifact@v4
        if: ${{ always() }}
        with:
          name: backend-openapi
          path: openapi.json
      - uses: actions/upload-artifact@v4
        if: ${{ always() }}
        with:
          name: backend-test-results
          path: test-results.xml

  mobile:
    runs-on: ubuntu-latest
    defaults: { run: { working-directory: ./chameleon_vpn_client } }
    steps:
      - uses: actions/checkout@v4
      - uses: subosito/flutter-action@v2
        with: { channel: 'stable' }
      - uses: actions/cache@v4
        with:
          path: ~/.pub-cache
          key: ${{ runner.os }}-pub-${{ hashFiles('chameleon_vpn_client/pubspec.lock') }}
          restore-keys: |
            ${{ runner.os }}-pub-
      - name: Deps
        run: flutter pub get
      - name: Analyze
        run: flutter analyze
      - name: Test
        run: flutter test -r expanded | tee test-results.log
      - uses: actions/upload-artifact@v4
        if: ${{ always() }}
        with:
          name: mobile-test-results
          path: test-results.log

  web:
    if: ${{ hashFiles('frontend/**/package.json') != '' }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - id: findweb
        run: |
          set -e
          FOUND=$(git ls-files "frontend/**/package.json" | head -n1)
          echo "workdir=$(dirname $FOUND)" >> $GITHUB_OUTPUT
      - uses: actions/setup-node@v4
        with:
          node-version: '20'
      - uses: actions/cache@v4
        with:
          path: ~/.npm
          key: ${{ runner.os }}-npm-${{ hashFiles('frontend/**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-npm-
      - name: Install
        working-directory: ${{ steps.findweb.outputs.workdir }}
        run: npm ci
      - name: Lint
        working-directory: ${{ steps.findweb.outputs.workdir }}
        run: npm run lint
      - name: Test
        working-directory: ${{ steps.findweb.outputs.workdir }}
        run: npm test -- --watchAll=false | tee test-results.log
      - uses: actions/upload-artifact@v4
        if: ${{ always() }}
        with:
          name: web-test-results
          path: ${{ steps.findweb.outputs.workdir }}/test-results.log
