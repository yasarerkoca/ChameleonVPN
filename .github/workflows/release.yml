name: Mobile Build

on:
  workflow_dispatch:
  push:
    tags:
      - 'v*'

jobs:
  android:
    name: Android AAB Build
    runs-on: ubuntu-latest
    env:
      FLUTTER_VERSION: "3.22.2"
      ANDROID_NDK_VERSION: "27.0.12077973"
      JAVA_TOOL_OPTIONS: "-Xmx2g"
      GRADLE_OPTS: "-Dorg.gradle.daemon=false -Dorg.gradle.jvmargs='-Xmx2g -Dfile.encoding=UTF-8'"

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Java 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '17'
          cache: 'gradle'

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ env.FLUTTER_VERSION }}
          channel: 'stable'
          cache: true

      - name: Accept Android licenses
        run: yes | "${ANDROID_SDK_ROOT}/cmdline-tools/latest/bin/sdkmanager" --licenses

      - name: Install Android NDK ${{ env.ANDROID_NDK_VERSION }}
        run: |
          yes | "${ANDROID_SDK_ROOT}/cmdline-tools/latest/bin/sdkmanager" "ndk;${ANDROID_NDK_VERSION}"
          echo "ndk.dir=${ANDROID_SDK_ROOT}/ndk/${ANDROID_NDK_VERSION}" >> "${GITHUB_WORKSPACE}/chameleon_vpn_client/android/local.properties"

      - name: Flutter doctor (diagnostic)
        working-directory: chameleon_vpn_client
        run: flutter doctor -v

      - name: Pub get
        working-directory: chameleon_vpn_client
        run: flutter pub get

      - name: Set version from tag
        run: echo "VERSION=${GITHUB_REF_NAME#v}" >> $GITHUB_ENV

      # ❗ APK YOK — Resmi mağaza politikası gereği AAB build
      - name: Build AAB (release)
        working-directory: chameleon_vpn_client
        run: flutter build appbundle --release -v --build-name $VERSION --build-number $VERSION

      - name: Upload AAB
        uses: actions/upload-artifact@v4
        with:
          name: android-aab
          path: chameleon_vpn_client/build/app/outputs/bundle/release/*.aab

      - name: Policy guard (fail if APK sneaks in)
        run: |
          if git grep -nE 'flutter build apk|\.apk\b' -- ':!*.md' ':!*.yml' ':!*.yaml' ; then
            echo "APK build/upload forbidden by policy."; exit 1; fi
  ios:
    name: iOS IPA Build
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v4
      - uses: subosito/flutter-action@v2
        with:
          flutter-version: "3.22.2"
          channel: 'stable'
          cache: true
      - name: Set version from tag
        run: echo "VERSION=${GITHUB_REF_NAME#v}" >> $GITHUB_ENV
      - name: Pub get
        working-directory: chameleon_vpn_client
        run: flutter pub get
      - name: Build IPA (release)
        working-directory: chameleon_vpn_client
        run: flutter build ipa --release --no-codesign -v --build-name $VERSION --build-number $VERSION
      - name: Upload IPA
        uses: actions/upload-artifact@v4
        with:
          name: ios-ipa
          path: chameleon_vpn_client/build/ios/ipa/*.ipa

  backend:
    name: Backend Docker Image
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set version from tag
        run: echo "VERSION=${GITHUB_REF_NAME#v}" >> $GITHUB_ENV
      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and push image
        run: |
          docker build -t ghcr.io/${{ github.repository_owner }}/chameleonvpn-backend:${VERSION} backend
          docker push ghcr.io/${{ github.repository_owner }}/chameleonvpn-backend:${VERSION}

  release:
    name: Create Release
    needs: [android, ios, backend]
    runs-on: ubuntu-latest
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts
      - name: Create GitHub release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.ref_name }}
          files: |
            artifacts/android-aab/*.aab
            artifacts/ios-ipa/*.ipa
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
