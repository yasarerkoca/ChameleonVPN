user  nginx;
worker_processes auto;

events { worker_connections 1024; }

http {
  include       /etc/nginx/mime.types;
  default_type  application/octet-stream;
  sendfile      on;
  keepalive_timeout  65;

  # HTTP -> HTTPS + ACME
  server {
    listen 80;
    server_name chameleonvpn.app www.chameleonvpn.app;

    location /.well-known/acme-challenge/ {
      root /var/www/certbot;
    }

    # Web health (healthcheck için basit 200)
    location = /healthz { return 200; }

    location / {
      return 301 https://$host$request_uri;
    }
  }

  # HTTPS (tek domain)
  server {
    listen 443 ssl http2;
    server_name chameleonvpn.app www.chameleonvpn.app;

    ssl_certificate           /etc/nginx/certs/chameleonvpn.app/fullchain.pem;
    ssl_certificate_key       /etc/nginx/certs/chameleonvpn.app/chameleonvpn.app-PrivateKey.pem;
    ssl_trusted_certificate   /etc/nginx/certs/chameleonvpn.app/chameleonvpn.app-intermediate.pem;

    # Temel sertleştirme
    add_header Strict-Transport-Security "max-age=31536000" always;

    # Statik (React admin build mount)
    root /usr/share/nginx/html;
    index index.html;

    # Admin SPA fallback (varsa)
    location / {
      try_files $uri /index.html;
    }

    # Backend API -> container "backend:8000"
    location /api/ {
      proxy_pass http://backend:8000/;  # trailing slash ÖNEMLİ
      proxy_http_version 1.1;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection "upgrade";
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_read_timeout 300;
    }

    # Kısayol healthz
    location = /healthz {
      proxy_pass http://backend:8000/healthz;
    }
  }
}
