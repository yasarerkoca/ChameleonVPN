# ~/ChameleonVPN/production.yml
version: "3.9"

services:
  nginx:
    image: nginx:alpine
    container_name: chameleon_nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/conf:/etc/nginx/conf.d
      - ./nginx/certbot/conf:/etc/letsencrypt
      - ./nginx/certbot/www:/var/www/certbot
    depends_on:
      - backend
    restart: always
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost"]
      interval: 30s
      timeout: 10s
      retries: 3
    deploy:
      resources:
        limits:
          cpus: "0.50"
          memory: "256M"
        reservations:
          cpus: "0.25"
          memory: "128M"
  certbot:
    image: certbot/certbot
    container_name: chameleon_certbot
    volumes:
      - ./nginx/certbot/conf:/etc/letsencrypt
      - ./nginx/certbot/www:/var/www/certbot

  backend:
    build:
      context: ./backend
    container_name: chameleon_backend
    env_file:
      - ./backend/.env
    volumes:
      - ./backend:/app
    command: >
      uvicorn app.main:app --host 0.0.0.0 --port 8000
    expose:
      - "8000"
    restart: always
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/monitor/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    deploy:
      resources:
        limits:
          cpus: "1.00"
          memory: "512M"
        reservations:
          cpus: "0.50"
          memory: "256M"
  db:
    image: postgres:14
    container_name: chameleon_db
    environment:
      POSTGRES_DB: chameleonvpn
      POSTGRES_USER: vpnadmin
      POSTGRES_PASSWORD: iryna
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: always
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U vpnadmin"]
      interval: 30s
      timeout: 10s
      retries: 5
    deploy:
      resources:
        limits:
          cpus: "1.00"
          memory: "1G"
        reservations:
          cpus: "0.50"
          memory: "512M"
  redis:
    image: redis:7
    container_name: chameleon_redis
    restart: always
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
    deploy:
      resources:
        limits:
          cpus: "0.50"
          memory: "256M"
        reservations:
          cpus: "0.25"
          memory: "128M"
volumes:
  postgres_data:
